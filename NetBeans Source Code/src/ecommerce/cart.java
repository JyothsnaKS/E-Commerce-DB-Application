/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecommerce;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
/**
 *
 * @author jyothsna
 */
public class cart extends javax.swing.JFrame {

        Connection con = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        PreparedStatement pst = null;
        PreparedStatement pst2=null;
        String cid;
        String cartid;
        String oid;
    /**
     * Creates new form cart
     */
    public cart(String cid,String cartid){
        this.cid=cid;
        this.cartid=cartid;
        System.out.println(cartid);
        initComponents();
        
        String psql = "select count(*) as c from includes where cart_id='"+cartid+"';";
        try{
        Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/commerce","postgres", "hello");
            pst = con.prepareStatement(psql);
            rs = pst.executeQuery();
            int rows = 0;
            while(rs.next())
            {
                 rows=Integer.parseInt(rs.getString("c"));
                 break;
            }
            //System.out.println(rows);
            int i = 0;
            String sql2="select product_name, price from products natural join includes where cart_id ='"+cartid+"' ORDER BY product_id";
            pst2 = con.prepareStatement(sql2);
            rs2 = pst2.executeQuery(); 
            String pid="";
            String price = "" ;
            int x = 0; 
            while(rs2.next())
            {
                
                    pid=rs2.getString("product_name");
                    price = rs2.getString("price");
                    System.out.println(pid);
                   if(x == 0){
                        c1.setText(pid);
                        p1.setText(price);
                   }
                   if(x == 1){
                        c2.setText(pid);
                          p2.setText(price);
                   }
                   if(x == 2){
                        c3.setText(pid);
                          p3.setText(price);
                   }
                   if(x == 3){
                        c4.setText(pid);
                          p4.setText(price);
                   }
                   if(x == 4){
                        c5.setText(pid);
                          p5.setText(price);
                   }
                    if(x+1 > rows)
                        break;
                    x++;
            }  
             if(1 > rows){
                 c1.setVisible(false);
                 p1.setVisible(false);
             }
             if(2 > rows){
                 c2.setVisible(false);
                 p2.setVisible(false);
             }
             
             if(3 > rows){
                 c3.setVisible(false);
              p3.setVisible(false);   
             }
             if(4 > rows){
                 c4.setVisible(false);
              p4.setVisible(false);   
             }
             if(5 > rows){
                 c5.setVisible(false);
                 p5.setVisible(false);
             }
             
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        c1 = new javax.swing.JCheckBox();
        c2 = new javax.swing.JCheckBox();
        c3 = new javax.swing.JCheckBox();
        c4 = new javax.swing.JCheckBox();
        c5 = new javax.swing.JCheckBox();
        p1 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        p3 = new javax.swing.JLabel();
        p4 = new javax.swing.JLabel();
        p5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Delete from cart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Price");

        c1.setText("jCheckBox1");

        c2.setText("jCheckBox2");

        c3.setText("jCheckBox3");

        c4.setText("jCheckBox4");

        c5.setText("jCheckBox5");

        p1.setText("jLabel3");

        p2.setText("jLabel4");

        p3.setText("jLabel5");

        p4.setText("jLabel6");

        p5.setText("jLabel7");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Confirm Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addComponent(c2)
                    .addComponent(c3)
                    .addComponent(c5)
                    .addComponent(c4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p5)
                    .addComponent(p3)
                    .addComponent(p2)
                    .addComponent(jLabel2)
                    .addComponent(p1)
                    .addComponent(p4))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton2)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(33, 33, 33)
                .addComponent(jButton3)
                .addGap(36, 36, 36)
                .addComponent(jButton4)
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c1)
                    .addComponent(p1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c2)
                    .addComponent(p2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c3)
                    .addComponent(p3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c4)
                    .addComponent(p4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c5)
                    .addComponent(p5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String sql="select * from includes where cart_id = '" + cartid + "' ORDER BY product_id";
        String sql2="delete from includes where cart_id= '" + cartid +"' and product_id=?;";
        PreparedStatement pst2 = null;
        try{
            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/commerce","postgres", "hello");
            pst = con.prepareStatement(sql);
            pst2 = con.prepareStatement(sql2);
            //pst2.setString(1,cartid);
            
            //rs = pst.executeQuery();
            if(c1.isSelected()){
                rs = pst.executeQuery();  
                while(rs.next()){
                   String pid=rs.getString("product_id");
                   pst2.setString(1,pid);
                   break;
                }
                pst2.executeQuery();
            }
            if(c2.isSelected()){
                rs = pst.executeQuery(); 
                int i=1;
                while(rs.next()){
                   if(i==2){
                    String pid=rs.getString("product_id");
                    System.out.println(pid);
                    pst2.setString(1,pid);
                    break;
                   }
                   i++;
                }
                pst2.executeQuery();
            }
            if(c3.isSelected()){
                rs = pst.executeQuery(); 
                int i=1;
                while(rs.next()){
                   String pid=rs.getString("product_id");
                   if(i==3){
                    pst2.setString(1,pid);
                    break;
                   }
                   i++;
                }
                pst2.executeQuery();
            }
            if(c4.isSelected()){
                rs = pst.executeQuery(); 
                int i=1;
                while(rs.next()){
                   String pid=rs.getString("product_id");
                   if(i==4){
                    pst2.setString(1,pid);
                   break;
                   }
                   i++;
                }
                pst2.executeQuery();
            }
            if(c4.isSelected()){
                rs = pst.executeQuery(); 
                int i=1;
                while(rs.next()){
                   String pid=rs.getString("product_id");
                   if(i==4){
                    pst2.setString(1,pid);
                    break;
                   }
                   i++;
                }
                pst2.executeQuery();
            }
            if(c5.isSelected()){
                rs = pst.executeQuery(); 
                int i=1;
                while(rs.next()){
                   String pid=rs.getString("product_id");
                   if(i==5){
                    pst2.setString(1,pid);
                    break;
                   }
                   i++;
                }
                pst2.executeQuery();
            }
            
        }
        catch(Exception e){
            
            System.out.println(e);
        }
        finally{
            this.setVisible(false);
            new cart(cid,cartid).setVisible(true);
        }
                
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        new logged_in(cid).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String sql="select order_id from _order order by order_id desc";
        try{
            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/commerce","postgres", "hello");
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            String oid="";
            while(rs.next()){
                oid=rs.getString("order_id");
                break;
            }
            String cpy=oid;
            String coid=oid.substring(2);
            int id = Integer.parseInt(coid);
            id++;
            oid = "O_0" + id;
            this.oid = oid;
            sql="insert into _order(order_id,cart_id,shipper_id,customer_id) values ('"+oid+"','"+cartid+"','SH_001','"+cid+"');";
            pst = con.prepareStatement(sql);
            pst.executeQuery();
        }
        catch(Exception  e){
            System.out.println(e);
            
        }
        finally{
            this.setVisible(false);
            new Options(this.cid,this.oid).setVisible(true);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);
        new login().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new cart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c2;
    private javax.swing.JCheckBox c3;
    private javax.swing.JCheckBox c4;
    private javax.swing.JCheckBox c5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel p3;
    private javax.swing.JLabel p4;
    private javax.swing.JLabel p5;
    // End of variables declaration//GEN-END:variables
}
